{"version":3,"file":"static/js/454.df45f1aa.chunk.js","mappings":"wPAiFA,EA5Ec,WACZ,MAAeA,EAAAA,EAAAA,UAARC,GAAP,eA0BA,OACE,gBAAKC,GAAG,QAAR,UACE,UAAC,IAAD,CACEA,GAAI,aACJD,KAAMA,EACNE,KAAK,QACLC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,IACpBE,cAAe,CAAEC,UAAU,GAC3BC,SAhCU,SAACR,GACf,IAAKS,EAAsBT,EAAtBS,SAAUC,EAAYV,EAAZU,SACC,UAAbD,GAAqC,WAAbC,ECTV,SAACD,EAAkBC,GACtC,OAAOC,EAAAA,EAAAA,GAAQ,CACbC,IAAK,eACLC,OAAQ,OACRC,KAAM,CACJL,SAAAA,EACAC,SAAAA,KDOFK,CAAMN,EAAUC,GAAUM,MAAK,SAAAC,GAC7B,MAAoBA,EAAKH,KAAlBI,EAAP,EAAOA,KAAMC,EAAb,EAAaA,IACD,IAATD,EACDE,EAAAA,GAAAA,QAAgBD,GAEhBC,EAAAA,GAAAA,MAAcD,MARhBE,QAAQC,KAAK,IA8BXC,eAdiB,aAejBC,aAAa,MATf,WAWE,SAAC,SAAD,CAAWnB,WAAY,CAAED,KAAM,IAA/B,UACE,eAAIqB,UAAU,eAAd,yCAEF,SAAC,SAAD,CACEC,MAAM,qBACNxB,KAAK,WACLyB,aAAa,QACbC,MAAO,CAAC,CAAEC,KAAM,SAAUC,UAAU,EAAMV,QAAS,0CAJrD,UAME,SAAC,IAAD,OAGF,SAAC,SAAD,CACEM,MAAM,eACNxB,KAAK,WACLyB,aAAa,SACbC,MAAO,CAAC,CAAEE,UAAU,EAAMV,QAAS,oCAJrC,UAME,SAAC,aAAD,OAGF,SAAC,SAAD,CAAWf,WAAY,CAAE0B,OAAQ,EAAG3B,KAAM,IAAM4B,MAAO,CAACC,aAAc,KAAtE,UACE,UAAC,IAAD,CAAOC,KAAM,GAAb,WACE,SAAC,IAAD,CAAQL,KAAK,UAAUM,SAAS,SAAhC,2BAGA,SAAC,IAAD,CAAQN,KAAK,UAAUM,SAAS,SAASC,QA9CnC,WACdpC,EAAKqC,eA6CG,sC,+FElENC,EAAUC,IAAAA,OAAa,CAC3BC,QAASC,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,mBACrBC,QAAS,MAGXL,EAAQM,aAAajC,QAAQkC,KAC3B,SAAAC,GAGE,OAAOA,KAET,SAAAC,GAEE,OAAOC,QAAQC,OAAOF,MAI1BT,EAAQM,aAAaM,SAASL,KAC5B,SAAAK,GACE,GAAuB,MAApBA,EAASC,OAaV,OAHAC,EAAAA,EAAAA,MAAY,CACVC,MAAO,yCAEFL,QAAQC,OAAO,wCAZtB,IAAO/B,EAAQgC,EAASpC,KAAjBI,KACP,OAAY,OAATA,GACDE,EAAAA,GAAAA,QAAgB,8FACT4B,QAAQC,OAAO,uBACL,MAAT/B,EAED8B,QAAQC,OAAO,iCAFjB,KAWX,SAAAF,GAKE,OAJAK,EAAAA,EAAAA,MAAY,CACVC,MAAO,yCAGFL,QAAQC,OAAOF,MAI1B","sources":["pages/login/index.tsx","api/login.ts","utils/request.ts"],"sourcesContent":["import { Form, Input, Button, Space, message  } from 'antd'\nimport './logins.less'\nimport { login } from '../../api/login'\n\n\nconst Login = () => {\n  const [form] = Form.useForm()\n\n  // 登录接口\n  const onLogin = (form: any) => {\n    let {username, password} = form\n    if(username === 'admin' && password === '123456') {\n      console.info(1)\n      return\n    }\n    login(username, password).then(resp => {\n      const {code, msg} = resp.data;\n      if(code === 0) {\n        message.success(msg)\n      } else {\n        message.error(msg)\n      }\n    })\n  }\n  // 重置\n  const onReset = () => {\n    form.resetFields()\n  }\n  const onFinishFailed = () => {\n\n  }\n\n  return(\n    <div id='login'>\n      <Form\n        id =\"login-form\"\n        form={form}\n        name=\"basic\"\n        labelCol={{ span: 6 }}\n        wrapperCol={{ span: 16 }}\n        initialValues={{ remember: true }}\n        onFinish={onLogin}\n        onFinishFailed={onFinishFailed}\n        autoComplete=\"off\"\n      >\n        <Form.Item wrapperCol={{ span: 24 }}>\n          <h1 className='algin-center'>万云科技</h1>\n        </Form.Item>\n        <Form.Item\n          label=\"用户名\"\n          name=\"username\"\n          initialValue=\"admin\"\n          rules={[{ type: 'string', required: true, message: '请输入用户名!' }]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"密码\"\n          name=\"password\"\n          initialValue=\"123456\"\n          rules={[{ required: true, message: '请输入密码!' }]}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item wrapperCol={{ offset: 8, span: 16 }} style={{marginBottom: '0'}}>\n          <Space size={20}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              登录\n            </Button>\n            <Button type=\"primary\" htmlType=\"submit\" onClick={onReset}>\n              重置\n            </Button>\n          </Space>\n        </Form.Item>\n      </Form>\n    </div>\n  )\n}\n\nexport default Login","import request from '../utils/request'\n\nexport const login = (username: string, password: string) => {\n  return request({\n    url: '/admin/login',\n    method: 'post',\n    data: {\n      username,\n      password\n    }\n  })\n}","import axios from 'axios'\nimport { message, Modal } from 'antd'\n// import NProgress from  'nprogress'\nimport {clear, get} from './storage'\n\nconst service = axios.create({\n  baseURL: process.env.REACT_APP_BASE_API,\n  timeout: 5000\n})\n\nservice.interceptors.request.use(\n  config => {\n    // NProgress.start()\n    // config.headers['Authorization'] = get('token')\n    return config\n  },\n  error => {\n    // NProgress.done()\n    return Promise.reject(error)\n  }\n)\n\nservice.interceptors.response.use(\n  response => {\n    if(response.status === 200) {\n      const {code} = response.data\n      if(code === 4003) {\n        message.warning('登录状态丢失，请退出后重新登录')\n        return Promise.reject('请登录')\n      } else if(code === 4000) {\n        clear()\n        return Promise.reject('认证失败')\n      }\n    } else {\n      Modal.error({\n        title: '网络请求错误'\n      })\n      return Promise.reject('网络请求错误')\n    }\n  },\n  error => {\n    Modal.error({\n      title: '网络请求错误'\n    })\n    // NProgress.done()\n    return Promise.reject(error)\n  }\n)\n\nexport default service\n"],"names":["Form","form","id","name","labelCol","span","wrapperCol","initialValues","remember","onFinish","username","password","request","url","method","data","login","then","resp","code","msg","message","console","info","onFinishFailed","autoComplete","className","label","initialValue","rules","type","required","offset","style","marginBottom","size","htmlType","onClick","resetFields","service","axios","baseURL","process","REACT_APP_BASE_API","timeout","interceptors","use","config","error","Promise","reject","response","status","Modal","title"],"sourceRoot":""}